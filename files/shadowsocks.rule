#!/bin/sh

# Get variable
getopts :c: opt && CONFIG=$OPTARG
getopts :i: opt && IGNORE=$OPTARG
[ -z $CONFIG ] || [ -z $IGNORE ] || [ ! -f $CONFIG ] || [ ! -f $IGNORE ] && {
	echo "Argument missing or configuration file not found."
	exit 1
}
server=$(awk -F'[,:]' '{for(i=1;i<=NF;i++){if($i~/server\042/){print $(i+1)}}}' \
$CONFIG | sed 's/\(.*\)"\(.*\)"\(.*\)/\2/g')
local_port=$(awk -F'[,:]' '{for(i=1;i<=NF;i++){if($i~/local_port\042/){print $(i+1)}}}' \
$CONFIG | sed 's/\(.*\)"\(.*\)"\(.*\)/\2/g')
[ -z $server ] || [ -z $local_port ] && {
	echo "Invalid argument, please check configuration file."
	exit 1
}

# Create a new chain
RULES="*nat\n:SHADOWSOCKS - [0:0]\n\
-A PREROUTING -p tcp -j SHADOWSOCKS\n\
-A SHADOWSOCKS -d $server/32 -j RETURN\n\
-A SHADOWSOCKS -d 0.0.0.0/8 -j RETURN\n\
-A SHADOWSOCKS -d 10.0.0.0/8 -j RETURN\n\
-A SHADOWSOCKS -d 127.0.0.0/8 -j RETURN\n\
-A SHADOWSOCKS -d 169.254.0.0/16 -j RETURN\n\
-A SHADOWSOCKS -d 172.16.0.0/12 -j RETURN\n\
-A SHADOWSOCKS -d 192.168.0.0/16 -j RETURN\n\
-A SHADOWSOCKS -d 224.0.0.0/4 -j RETURN\n\
-A SHADOWSOCKS -d 240.0.0.0/4 -j RETURN\n"

# Read the ignore list
while read -r ip; do
	[ ! -z "$ip" ] && RULES="$RULES-A SHADOWSOCKS -d $ip -j RETURN\n"
done < $IGNORE

RULES="$RULES-A SHADOWSOCKS -p tcp -j REDIRECT --to-ports $local_port\nCOMMIT"

# Apply the rules
echo -e $RULES | iptables-restore -n

exit 0
