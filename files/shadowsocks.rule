#!/bin/sh

# Get argument
while getopts ":c:i:f" arg; do
	case $arg in
		c) CONFIG=$OPTARG
		;;
		i) IGNORE=$OPTARG
		;;
		f) FLUSH=1
		;;
	esac
done

# Check configuration file
if [ -n "$CONFIG" ] && [ -f "$CONFIG" ]; then
	eval $(awk -F'[,:]' '{
		for (i=1; i<=NF; i++) {
			if ($i ~ /"server"/ &&
				$(i+1) ~ /([0-9]{1,3}\.){3}[0-9]{1,3}/) {
				printf("server=%s;", $(i+1))
			}
			if ($i ~ /"local_port"/) {
				printf("local_port=%s;", $(i+1))
			}
		}
	}' $CONFIG | tr -d '" ')
fi

# Check parameters
if [ -z "$server" ] || [ -z "$local_port" ]; then
	echo "Can't read server ip or local port from $CONFIG."
	exit 128
fi

# Generate ip list
IPLIST="$server\n0.0.0.0/8\n10.0.0.0/8
127.0.0.0/8\n169.254.0.0/16\n172.16.0.0/12
192.168.0.0/16\n224.0.0.0/4\n240.0.0.0/4"

# Check ignore list file
if [ -n "$IGNORE" ] && [ -f "$IGNORE" ]; then
	IPLIST="$IPLIST\n$(cat $IGNORE)"
fi

# Flush rules
flush_r() {
	iptables -t nat -D PREROUTING -p tcp -j SHADOWSOCKS
	iptables -t nat -F SHADOWSOCKS && \
	iptables -t nat -X SHADOWSOCKS
	iptables -t nat -D PREROUTING -p tcp \
		-m set ! --match-set shadowsocks dst \
		-j REDIRECT --to-ports $local_port
	[ -n "$FLUSH" ] && exit 0
}

# Use iptables
iptab_r() {
	local HEAD BODY TAIL

	HEAD="*nat
:SHADOWSOCKS - [0:0]
-A PREROUTING -p tcp -j SHADOWSOCKS"
	TAIL="-A SHADOWSOCKS -p tcp -j REDIRECT --to-ports $local_port
COMMIT"

	# Read the ignore list
	BODY=$(echo -e "$IPLIST" | \
		awk '$1 ~ /^([0-9]{1,3}\.){3}[0-9]{1,3}/ \
			{printf("-A SHADOWSOCKS -d %s -j RETURN\n", $1)}')

	# Apply the rules
	echo -e "$HEAD\n$BODY\n$TAIL" | iptables-restore -n

	exit $?
}

# Use ipset
ipset_r() {
	local HEAD BODY

	HEAD="create shadowsocks hash:net"

	# Read the ignore list
	BODY=$(echo -e "$IPLIST" | \
		awk '$1 ~ /^([0-9]{1,3}\.){3}[0-9]{1,3}/ \
			{printf("add shadowsocks %s\n", $1)}')

	# Apply the rules
	echo -e "$HEAD\n$BODY" | ipset -R && \
	iptables -t nat -A PREROUTING -p tcp \
		-m set ! --match-set shadowsocks dst \
		-j REDIRECT --to-ports $local_port

	return $?
}

flush_r>/dev/null 2>&1

# Catch error codes and select rules mode
ipset -X shadowsocks>/dev/null 2>&1
[ "$?" = 127 ] && iptab_r
ipset_r || iptab_r

exit $?
