#!/bin/sh

while getopts ":s:l:c:i:f" arg; do
	case $arg in
		s)
			SERVER=$OPTARG
			;;
		l)
			LOCAL_PORT=$OPTARG
			;;
		c)
			CONFIG=$OPTARG
			;;
		i)
			IGNORE=$OPTARG
			;;
		f)
			FLUSH=1
			;;
	esac
done

usage() {
	echo -e "usage:

    ss-rules

        -s <server_host>           host name or ip address of your remote server
        -l <local_port>            port number of your local server

        [-c <config_file>]         config file in json
        [-i <ignore_list>]         config file of ignore list

        [-f]                       flush the rules
"
}

get_ip() {
	nslookup $1 114.114.114.114 | \
	grep -v "114.114.114.114" | \
	awk '{ip[NR]=$3}\
		END{for(i=NR;i>0;i--)\
			{if(ip[i] ~ /^([0-9]{1,3}\.){3}[0-9]{1,3}$/)\
				{print ip[i];break;}}}'
}

if [ -n "$CONFIG" ] && [ -f "$CONFIG" ]; then
	eval $(awk -F'[,:]' '{
		for (i=1; i<=NF; i++) {
			if ($i ~ /"server"/) {
				printf("server=%s;", $(i+1))
			}
			if ($i ~ /"local_port"/) {
				printf("local_port=%s;", $(i+1))
			}
		}
	}' $CONFIG | tr -d '" ')
fi

if [ -n "$SERVER" ]; then
	server=$SERVER
fi

if [ -n "$LOCAL_PORT" ]; then
	local_port=$LOCAL_PORT
fi

if [ -z "$server" ] || [ -z "$local_port" ]; then
	usage
	exit 1
fi

flush_r() {
	iptables -t nat -D PREROUTING -p tcp -j SHADOWSOCKS
	iptables -t nat -F SHADOWSOCKS && \
	iptables -t nat -X SHADOWSOCKS
	iptables -t nat -D PREROUTING -p tcp \
		-m set ! --match-set shadowsocks dst \
		-j REDIRECT --to-ports $local_port
	[ -n "$FLUSH" ] && exit 0
}

iptab_r() {
	local HEAD BODY TAIL

	HEAD="*nat
:SHADOWSOCKS - [0:0]
-A PREROUTING -p tcp -j SHADOWSOCKS"
	TAIL="-A SHADOWSOCKS -p tcp -j REDIRECT --to-ports $local_port
COMMIT"

	BODY=$(echo -e "$IPLIST" | \
		awk '$1 ~ /^([0-9]{1,3}\.){3}[0-9]{1,3}/ \
			{printf("-A SHADOWSOCKS -d %s -j RETURN\n", $1)}')

	echo -e "$HEAD\n$BODY\n$TAIL" | iptables-restore -n

	exit $?
}

ipset_r() {
	local HEAD BODY

	HEAD="create shadowsocks hash:net"

	BODY=$(echo -e "$IPLIST" | \
		awk '$1 ~ /^([0-9]{1,3}\.){3}[0-9]{1,3}/ \
			{printf("add shadowsocks %s\n", $1)}')

	echo -e "$HEAD\n$BODY" | ipset -R && \
	iptables -t nat -A PREROUTING -p tcp \
		-m set ! --match-set shadowsocks dst \
		-j REDIRECT --to-ports $local_port

	return $?
}

flush_r>/dev/null 2>&1

server_ip=$(echo "$server" | grep -E "^([0-9]{1,3}\.){3}[0-9]{1,3}$")

if [ -z "$server_ip" ]; then
	echo "The $server is not ip, trying to resolve it."
	server=$(get_ip $server)
	[ -z "$server" ] && exit 1
	echo "Server IP: $server."
fi

IPLIST="$server\n0.0.0.0/8\n10.0.0.0/8
127.0.0.0/8\n169.254.0.0/16\n172.16.0.0/12
192.168.0.0/16\n224.0.0.0/4\n240.0.0.0/4"

if [ -n "$IGNORE" ] && [ -f "$IGNORE" ]; then
	IPLIST="$IPLIST\n$(cat $IGNORE)"
fi

ipset -X shadowsocks>/dev/null 2>&1
[ "$?" = 127 ] && iptab_r
ipset_r || iptab_r

exit $?
